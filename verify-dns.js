#!/usr/bin/env node

const { exec } = require('child_process');
const { promisify } = require('util');

const execAsync = promisify(exec);

async function runDigCommand(type, domain) {
  try {
    const { stdout } = await execAsync(`dig ${type} ${domain}`);
    return stdout;
  } catch (error) {
    return `Erreur: ${error.message}`;
  }
}

async function verifyDNSConfiguration() {
  console.log('üåê V√©rification de la configuration DNS pour sentreso.com\n');
  console.log('=' .repeat(60));

  const checks = [
    {
      name: 'Enregistrements MX',
      command: 'MX',
      domain: 'sentreso.com',
      expected: ['mxa.mailgun.org', 'mxb.mailgun.org'],
      current: ['mx1.privateemail.com', 'mx2.privateemail.com']
    },
    {
      name: 'Enregistrement SPF',
      command: 'TXT',
      domain: 'sentreso.com',
      expected: ['v=spf1 include:mailgun.org'],
      current: []
    },
    {
      name: 'Enregistrement DKIM',
      command: 'TXT',
      domain: 's1._domainkey.sentreso.com',
      expected: ['DKIM record from Mailgun'],
      current: []
    }
  ];

  for (const check of checks) {
    console.log(`\nüîç V√©rification: ${check.name}`);
    console.log(`   Domaine: ${check.domain}`);

    const result = await runDigCommand(check.command, check.domain);

    // Analyser le r√©sultat
    const lines = result.split('\n');
    const answerSection = lines.findIndex(line => line.includes('ANSWER SECTION:'));

    if (answerSection !== -1) {
      const answers = lines.slice(answerSection + 1)
        .filter(line => line.trim() && !line.startsWith(';'))
        .filter(line => line.includes(check.domain));

      console.log(`   üìã R√©sultats actuels:`);
      answers.forEach(answer => {
        console.log(`      ${answer.trim()}`);
      });

      // V√©rifier si la migration est n√©cessaire
      const needsMigration = check.current.some(current =>
        answers.some(answer => answer.includes(current))
      );

      if (needsMigration) {
        console.log(`   ‚ö†Ô∏è  Migration n√©cessaire vers Mailgun`);
        console.log(`   üìù √Ä configurer: ${check.expected.join(', ')}`);
      } else {
        console.log(`   ‚úÖ Configuration correcte`);
      }
    } else {
      console.log(`   ‚ùå Aucun enregistrement trouv√©`);
      console.log(`   üìù √Ä configurer: ${check.expected.join(', ')}`);
    }
  }

  console.log('\n' + '=' .repeat(60));
  console.log('üìã R√©sum√© des actions n√©cessaires:\n');

  console.log('1Ô∏è‚É£ Cr√©er un compte Mailgun:');
  console.log('   ‚Ä¢ Allez sur https://mailgun.com');
  console.log('   ‚Ä¢ Cr√©ez un compte avec kaneaziz@gmail.com');
  console.log('   ‚Ä¢ Ajoutez le domaine sentreso.com');

  console.log('\n2Ô∏è‚É£ Modifier les enregistrements DNS:');
  console.log('   ‚Ä¢ Remplacez les MX PrivateEmail par Mailgun');
  console.log('   ‚Ä¢ Ajoutez l\'enregistrement SPF');
  console.log('   ‚Ä¢ Ajoutez l\'enregistrement DKIM (fourni par Mailgun)');

  console.log('\n3Ô∏è‚É£ Configurer Supabase:');
  console.log('   ‚Ä¢ Connectez-vous √† Supabase Dashboard');
  console.log('   ‚Ä¢ Allez dans Settings ‚Üí Auth ‚Üí Email Templates');
  console.log('   ‚Ä¢ Configurez SMTP avec les infos Mailgun');

  console.log('\n4Ô∏è‚É£ Tester la configuration:');
  console.log('   ‚Ä¢ Attendez 24-48h pour la propagation DNS');
  console.log('   ‚Ä¢ Relancez ce script: node verify-dns.js');
  console.log('   ‚Ä¢ Testez l\'envoi: node test-email-config.js');
}

// Fonction pour v√©rifier la configuration Mailgun
async function checkMailgunSetup() {
  console.log('\nüìß V√©rification de la configuration Mailgun...\n');

  console.log('üîó √âtapes pour configurer Mailgun:');
  console.log('1. Connectez-vous √† https://mailgun.com');
  console.log('2. Cr√©ez un nouveau domaine: sentreso.com');
  console.log('3. Copiez les enregistrements DNS fournis');
  console.log('4. Ajoutez-les √† votre registrar de domaine');
  console.log('5. Attendez la v√©rification (24-48h)');

  console.log('\nüìã Enregistrements typiques Mailgun:');
  console.log('MX: mxa.mailgun.org, mxb.mailgun.org');
  console.log('SPF: v=spf1 include:mailgun.org ~all');
  console.log('DKIM: [valeur fournie par Mailgun]');
}

// Fonction pour v√©rifier Supabase
async function checkSupabaseSetup() {
  console.log('\nüîß V√©rification de la configuration Supabase...\n');

  console.log('üìã Configuration SMTP dans Supabase Dashboard:');
  console.log('Host: smtp.mailgun.org');
  console.log('Port: 587');
  console.log('Username: kaneaziz@gmail.com');
  console.log('Password: [votre password Mailgun]');
  console.log('Sender Name: Sentreso Finance');
  console.log('Sender Email: support@sentreso.com');

  console.log('\nüìß Templates √† configurer:');
  console.log('‚Ä¢ confirm_signup - Email de bienvenue');
  console.log('‚Ä¢ recovery - R√©initialisation de mot de passe');
  console.log('‚Ä¢ magic_link - Connexion par lien magique');
}

// Fonction principale
async function main() {
  console.log('üöÄ V√©rificateur DNS - Sentreso Finance\n');

  await verifyDNSConfiguration();
  await checkMailgunSetup();
  await checkSupabaseSetup();

  console.log('\n' + '=' .repeat(60));
  console.log('‚úÖ V√©rification termin√©e!');
  console.log('\nüìû Prochaines √©tapes:');
  console.log('1. Suivez le guide DNS_MIGRATION_GUIDE.md');
  console.log('2. Configurez Mailgun et les DNS');
  console.log('3. Configurez Supabase Dashboard');
  console.log('4. Testez avec: node test-email-config.js');
}

// Ex√©cuter le script
if (require.main === module) {
  main().catch(console.error);
}

module.exports = {
  verifyDNSConfiguration,
  checkMailgunSetup,
  checkSupabaseSetup
};
